
REM CODEGEN CATEGORY_SEQ

   CREATE SEQUENCE  "CODEGEN"."CATEGORY_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 
REM CODEGEN CITY_SEQ

   CREATE SEQUENCE  "CODEGEN"."CITY_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN CLASSROOM_SEQ

   CREATE SEQUENCE  "CODEGEN"."CLASSROOM_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 
REM CODEGEN CLASS_ID_SEQ

   CREATE SEQUENCE  "CODEGEN"."CLASS_ID_SEQ"  MINVALUE 1000 MAXVALUE 9999 INCREMENT BY 1 START WITH 1040 CACHE 20 NOORDER  NOCYCLE ;
 
REM CODEGEN CLINICSCHEDULE_SEQ

   CREATE SEQUENCE  "CODEGEN"."CLINICSCHEDULE_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN COUNTRY_SEQ

   CREATE SEQUENCE  "CODEGEN"."COUNTRY_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN COURSE_SEQ

   CREATE SEQUENCE  "CODEGEN"."COURSE_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 
REM CODEGEN ELECSUBSCRIPTION_SEQ

   CREATE SEQUENCE  "CODEGEN"."ELECSUBSCRIPTION_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN FACILITY_SEQ

   CREATE SEQUENCE  "CODEGEN"."FACILITY_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 
REM CODEGEN FUNCTIONGROUP_SEQ

   CREATE SEQUENCE  "CODEGEN"."FUNCTIONGROUP_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN FUNCTION_SEQ

   CREATE SEQUENCE  "CODEGEN"."FUNCTION_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN HISTRORYLOG_SEQ

   CREATE SEQUENCE  "CODEGEN"."HISTRORYLOG_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN MATERIAL_SEQ

   CREATE SEQUENCE  "CODEGEN"."MATERIAL_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN METHOD_ID_SEQ

   CREATE SEQUENCE  "CODEGEN"."METHOD_ID_SEQ"  MINVALUE 1000 MAXVALUE 10000 INCREMENT BY 1 START WITH 1020 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN MORDER_SEQ

   CREATE SEQUENCE  "CODEGEN"."MORDER_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN ORDERMATERIAL_SEQ

   CREATE SEQUENCE  "CODEGEN"."ORDERMATERIAL_SEQ"  MINVALUE 0 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 0 NOCACHE  NOORDER  NOCYCLE ;
 
REM CODEGEN ORDERRESPONSE_SEQ

   CREATE SEQUENCE  "CODEGEN"."ORDERRESPONSE_SEQ"  MINVALUE 0 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 0 NOCACHE  NOORDER  NOCYCLE ;
 
REM CODEGEN PROJECT_ID_SEQ

   CREATE SEQUENCE  "CODEGEN"."PROJECT_ID_SEQ"  MINVALUE 100 MAXVALUE 999 INCREMENT BY 1 START WITH 180 CACHE 20 NOORDER  NOCYCLE ;
 
REM CODEGEN REGION_SEQ

   CREATE SEQUENCE  "CODEGEN"."REGION_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN REPORTGROUP_SEQ

   CREATE SEQUENCE  "CODEGEN"."REPORTGROUP_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN REPORTS_SEQ

   CREATE SEQUENCE  "CODEGEN"."REPORTS_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN SCHEDULE_SEQ

   CREATE SEQUENCE  "CODEGEN"."SCHEDULE_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN SECURITYLEVEL_SEQ

   CREATE SEQUENCE  "CODEGEN"."SECURITYLEVEL_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN SHIPMENTDETAIL_SEQ

   CREATE SEQUENCE  "CODEGEN"."SHIPMENTDETAIL_SEQ"  MINVALUE 0 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 0 NOCACHE  NOORDER  NOCYCLE ;
 
REM CODEGEN STATE_SEQ

   CREATE SEQUENCE  "CODEGEN"."STATE_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN SUBCATEGORY_SEQ

   CREATE SEQUENCE  "CODEGEN"."SUBCATEGORY_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 
REM CODEGEN SUBSCRIPTIONBRAND_SEQ

   CREATE SEQUENCE  "CODEGEN"."SUBSCRIPTIONBRAND_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 
REM CODEGEN TRAININGPLAN_SEQ

   CREATE SEQUENCE  "CODEGEN"."TRAININGPLAN_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN USECASE_ID_SEQ

   CREATE SEQUENCE  "CODEGEN"."USECASE_ID_SEQ"  MINVALUE 1000 MAXVALUE 9999 INCREMENT BY 1 START WITH 1040 CACHE 20 ORDER  NOCYCLE ;
 
REM CODEGEN USERENROLL_SEQ

   CREATE SEQUENCE  "CODEGEN"."USERENROLL_SEQ"  MINVALUE 1 MAXVALUE 1.00000000000000E+27 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
 
REM CODEGEN CATEGORY

  CREATE TABLE "CODEGEN"."CATEGORY" 
   (	"CATID" NUMBER(10,0) NOT NULL ENABLE, 
	"CATNAME" VARCHAR2(40 BYTE), 
	 CONSTRAINT "CATEGORY_PK" PRIMARY KEY ("CATID") ENABLE
   ) ;
 
REM CODEGEN CLASSMASTER

  CREATE TABLE "CODEGEN"."CLASSMASTER" 
   (	"USECASE_ID" VARCHAR2(20 BYTE), 
	"CLASS_ID" VARCHAR2(30 BYTE), 
	"CLASS_NAME" VARCHAR2(30 BYTE), 
	 CONSTRAINT "classmaster_pk" PRIMARY KEY ("USECASE_ID", "CLASS_NAME") ENABLE
   ) ;
 
REM CODEGEN COUNTRY

  CREATE TABLE "CODEGEN"."COUNTRY" 
   (	"COUNTRYID" NUMBER(10,0) NOT NULL ENABLE, 
	"COUNTRYNAME" VARCHAR2(200 BYTE), 
	 CONSTRAINT "COUNTRY_PK" PRIMARY KEY ("COUNTRYID") ENABLE
   ) ;
 
REM CODEGEN DAOINFO

  CREATE TABLE "CODEGEN"."DAOINFO" 
   (	"CLASSID" VARCHAR2(30 BYTE), 
	"DAOID" VARCHAR2(30 BYTE), 
	"DAONAME" VARCHAR2(30 BYTE)
   ) ;
 
REM CODEGEN DBLIST

  CREATE TABLE "CODEGEN"."DBLIST" 
   (	"PROJECTNAME" VARCHAR2(20 BYTE), 
	"USECASES" VARCHAR2(20 BYTE), 
	"FUNCTIONNAME" VARCHAR2(20 BYTE), 
	"INPUT" VARCHAR2(20 BYTE), 
	"OUTPUT" VARCHAR2(20 BYTE), 
	"DBFUNCTIONNAME" VARCHAR2(20 BYTE), 
	"TABLENAME" VARCHAR2(20 BYTE), 
	"DAONAME" VARCHAR2(20 BYTE)
   ) ;
 
REM CODEGEN DBLISTSEC

  CREATE TABLE "CODEGEN"."DBLISTSEC" 
   (	"PROJECTNAME" VARCHAR2(20 BYTE), 
	"USECASES" VARCHAR2(20 BYTE), 
	"FUNCTIONNAME" VARCHAR2(20 BYTE), 
	"INPUT" VARCHAR2(20 BYTE), 
	"OUTPUT" VARCHAR2(20 BYTE), 
	"DBFUNCTIONNAME" VARCHAR2(20 BYTE), 
	"TABLENAME" VARCHAR2(20 BYTE), 
	"DAONAME" VARCHAR2(20 BYTE), 
	"STATUS" VARCHAR2(50 BYTE)
   ) ;
 
REM CODEGEN FINANCIALPWD

  CREATE TABLE "CODEGEN"."FINANCIALPWD" 
   (	"PASSWORD" VARCHAR2(100 BYTE)
   ) ;
 
REM CODEGEN FRONTTOPAGE

  CREATE TABLE "CODEGEN"."FRONTTOPAGE" 
   (	"USECASESID" VARCHAR2(30 BYTE), 
	"TOACTION" VARCHAR2(30 BYTE)
   ) ;
 
REM CODEGEN FUNCTIONGROUP

  CREATE TABLE "CODEGEN"."FUNCTIONGROUP" 
   (	"GROUPID" NUMBER(10,0) NOT NULL ENABLE, 
	"GROUPNAME" VARCHAR2(100 BYTE), 
	 CONSTRAINT "FUNCTIONGROUP_PK" PRIMARY KEY ("GROUPID") ENABLE
   ) ;
 
REM CODEGEN INPUTPARADATATYPE

  CREATE TABLE "CODEGEN"."INPUTPARADATATYPE" 
   (	"METHODID" VARCHAR2(30 BYTE), 
	"INPUTPARAMETER" VARCHAR2(30 BYTE)
   ) ;
 
REM CODEGEN METHODINFO

  CREATE TABLE "CODEGEN"."METHODINFO" 
   (	"CLASS_ID" VARCHAR2(30 BYTE), 
	"METHOD_ID" VARCHAR2(30 BYTE), 
	"METHOD_NAME" VARCHAR2(30 BYTE), 
	"METHOD_INPUT" VARCHAR2(50 BYTE), 
	"METHOD_OUTPUT" VARCHAR2(50 BYTE), 
	"METHOD_OPERATION" VARCHAR2(50 BYTE), 
	"METHOD_TABLE" VARCHAR2(50 BYTE)
   ) ;
 
REM CODEGEN METHODPARAMDETAIL

  CREATE TABLE "CODEGEN"."METHODPARAMDETAIL" 
   (	"METHOD_ID" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"METHOD_PARAM_NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"METHOD_TABLE_TYPE" VARCHAR2(50 BYTE) NOT NULL ENABLE
   ) ;
 
REM CODEGEN PROJECTMASTER

  CREATE TABLE "CODEGEN"."PROJECTMASTER" 
   (	"PROJECT_ID" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"PROJECT_NAME" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "projectmaster_pk" PRIMARY KEY ("PROJECT_NAME") ENABLE
   ) ;
 
REM CODEGEN PWDHISTORY

  CREATE TABLE "CODEGEN"."PWDHISTORY" 
   (	"USERNAME" VARCHAR2(100 BYTE), 
	"PASSWORD" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"PWD_MODIFIED_DATE" DATE NOT NULL ENABLE
   ) ;
 
REM CODEGEN REGION

  CREATE TABLE "CODEGEN"."REGION" 
   (	"REGIONID" NUMBER(10,0) NOT NULL ENABLE, 
	"REGIONNAME" VARCHAR2(100 BYTE), 
	"COUNTRYID" NUMBER(10,0), 
	 CONSTRAINT "REGION_PK" PRIMARY KEY ("REGIONID") ENABLE, 
	 CONSTRAINT "REGIONCOUNTRY_FK" FOREIGN KEY ("COUNTRYID")
	  REFERENCES "CODEGEN"."COUNTRY" ("COUNTRYID") ON DELETE CASCADE ENABLE
   ) ;
 
REM CODEGEN REPORTGROUP

  CREATE TABLE "CODEGEN"."REPORTGROUP" 
   (	"GROUPID" NUMBER(10,0) NOT NULL ENABLE, 
	"GROUPNAME" VARCHAR2(100 BYTE), 
	 CONSTRAINT "REPORTGROUP_PK" PRIMARY KEY ("GROUPID") ENABLE
   ) ;
 
REM CODEGEN REPORTS

  CREATE TABLE "CODEGEN"."REPORTS" 
   (	"REPID" NUMBER(10,0) NOT NULL ENABLE, 
	"REPNAME" VARCHAR2(200 BYTE), 
	"GROUPID" NUMBER(10,0), 
	"LINK" VARCHAR2(100 BYTE), 
	 CONSTRAINT "REPORTS_PK" PRIMARY KEY ("REPID") ENABLE, 
	 CONSTRAINT "REPORTSREPORTGROUP_FK" FOREIGN KEY ("GROUPID")
	  REFERENCES "CODEGEN"."REPORTGROUP" ("GROUPID") ON DELETE CASCADE ENABLE
   ) ;
 
REM CODEGEN SECURITYLEVEL

  CREATE TABLE "CODEGEN"."SECURITYLEVEL" 
   (	"SECLEVELID" NUMBER(10,0) NOT NULL ENABLE, 
	"SECLEVELNAME" VARCHAR2(200 BYTE), 
	 CONSTRAINT "SECURITYLEVEL_PK" PRIMARY KEY ("SECLEVELID") ENABLE
   ) ;
 
REM CODEGEN STATE

  CREATE TABLE "CODEGEN"."STATE" 
   (	"STATE" VARCHAR2(100 BYTE), 
	"STATEID" NUMBER(10,0) NOT NULL ENABLE, 
	"ABBRE" VARCHAR2(10 BYTE), 
	"REGIONID" NUMBER(10,0), 
	"COUNTRYID" NUMBER(10,0), 
	 CONSTRAINT "STATE_PK" PRIMARY KEY ("STATEID") ENABLE, 
	 CONSTRAINT "STARTCOUNTRY_FK" FOREIGN KEY ("COUNTRYID")
	  REFERENCES "CODEGEN"."COUNTRY" ("COUNTRYID") ENABLE, 
	 CONSTRAINT "STATEREGION_FK" FOREIGN KEY ("REGIONID")
	  REFERENCES "CODEGEN"."REGION" ("REGIONID") ON DELETE CASCADE ENABLE
   ) ;
 
REM CODEGEN STUDENTSTATUS

  CREATE TABLE "CODEGEN"."STUDENTSTATUS" 
   (	"STATUS" VARCHAR2(5 BYTE), 
	"DESCRIPTION" VARCHAR2(25 BYTE)
   ) ;
 
REM CODEGEN SUBCATEGORY

  CREATE TABLE "CODEGEN"."SUBCATEGORY" 
   (	"SUBCATID" NUMBER(10,0) NOT NULL ENABLE, 
	"SUBCATNAME" VARCHAR2(40 BYTE), 
	"CATID" NUMBER(10,0), 
	 CONSTRAINT "SUBCATEGORY_PK" PRIMARY KEY ("SUBCATID") ENABLE, 
	 CONSTRAINT "SUBCATEGORYCATEGORY_FK" FOREIGN KEY ("CATID")
	  REFERENCES "CODEGEN"."CATEGORY" ("CATID") ON DELETE CASCADE ENABLE
   ) ;
 
REM CODEGEN SUBORDER

  CREATE TABLE "CODEGEN"."SUBORDER" 
   (	"ORDERID" NUMBER(10,0), 
	"NAME" VARCHAR2(200 BYTE), 
	"ADDRESS" VARCHAR2(200 BYTE), 
	"CITY" VARCHAR2(200 BYTE), 
	"STATE" VARCHAR2(100 BYTE), 
	"ZIP" VARCHAR2(20 BYTE), 
	"EMAIL" VARCHAR2(300 BYTE), 
	"TELEPHONE" VARCHAR2(40 BYTE), 
	"ORDERTIME" DATE, 
	"TOTAL" FLOAT(53), 
	"DATEID" NUMBER(10,0), 
	"USERID" NUMBER(10,0), 
	"ORDERIP" VARCHAR2(100 BYTE)
   ) ;
 
REM CODEGEN SUBSCRIPTIONBRAND

  CREATE TABLE "CODEGEN"."SUBSCRIPTIONBRAND" 
   (	"BRANDID" NUMBER(10,0) NOT NULL ENABLE, 
	"BRANDNAME" VARCHAR2(100 BYTE), 
	"VALIDDAYS" VARCHAR2(20 BYTE), 
	"SUBSCRIPTIONRATES" NUMBER(14,4), 
	 CONSTRAINT "SUBSCRIPTIONBRAND_PK" PRIMARY KEY ("BRANDID") ENABLE
   ) ;
 
REM CODEGEN TIME

  CREATE TABLE "CODEGEN"."TIME" 
   (	"TIME" VARCHAR2(20 BYTE)
   ) ;
 
REM CODEGEN TRAININGPLAN

  CREATE TABLE "CODEGEN"."TRAININGPLAN" 
   (	"PLANID" NUMBER(10,0) NOT NULL ENABLE, 
	"PLANNAME" VARCHAR2(200 BYTE), 
	"NOTE" VARCHAR2(500 BYTE), 
	"ACTIVE" VARCHAR2(10 BYTE), 
	"DELETED" CHAR(1 BYTE), 
	 CONSTRAINT "TRAININGPLAN_PK" PRIMARY KEY ("PLANID") ENABLE
   ) ;
 
REM CODEGEN USECASEMASTER

  CREATE TABLE "CODEGEN"."USECASEMASTER" 
   (	"USECASE_ID" VARCHAR2(50 BYTE), 
	"USECASE_NAME" VARCHAR2(100 BYTE), 
	"PROJECT_ID" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "usecasemaster_pk" PRIMARY KEY ("USECASE_NAME", "PROJECT_ID") ENABLE
   ) ;
 
REM CODEGEN USECASESSCREEN

  CREATE TABLE "CODEGEN"."USECASESSCREEN" 
   (	"USEID" VARCHAR2(20 BYTE), 
	"SCREENID" VARCHAR2(20 BYTE), 
	"SCREENNAME" VARCHAR2(20 BYTE), 
	"SUCCESSSCREEN" VARCHAR2(20 BYTE), 
	"FAILURESCREEN" VARCHAR2(20 BYTE)
   ) ;
 
REM CODEGEN CATEGORY_PK

  CREATE UNIQUE INDEX "CODEGEN"."CATEGORY_PK" ON "CODEGEN"."CATEGORY" ("CATID") 
  ;
 
REM CODEGEN classmaster_pk

  CREATE UNIQUE INDEX "CODEGEN"."classmaster_pk" ON "CODEGEN"."CLASSMASTER" ("USECASE_ID", "CLASS_NAME") 
  ;
 
REM CODEGEN COUNTRY_PK

  CREATE UNIQUE INDEX "CODEGEN"."COUNTRY_PK" ON "CODEGEN"."COUNTRY" ("COUNTRYID") 
  ;
 
REM CODEGEN FUNCTIONGROUP_PK

  CREATE UNIQUE INDEX "CODEGEN"."FUNCTIONGROUP_PK" ON "CODEGEN"."FUNCTIONGROUP" ("GROUPID") 
  ;
 
REM CODEGEN projectmaster_pk

  CREATE UNIQUE INDEX "CODEGEN"."projectmaster_pk" ON "CODEGEN"."PROJECTMASTER" ("PROJECT_NAME") 
  ;
 
REM CODEGEN REGION_PK

  CREATE UNIQUE INDEX "CODEGEN"."REGION_PK" ON "CODEGEN"."REGION" ("REGIONID") 
  ;
 
REM CODEGEN REPORTGROUP_PK

  CREATE UNIQUE INDEX "CODEGEN"."REPORTGROUP_PK" ON "CODEGEN"."REPORTGROUP" ("GROUPID") 
  ;
 
REM CODEGEN REPORTS_PK

  CREATE UNIQUE INDEX "CODEGEN"."REPORTS_PK" ON "CODEGEN"."REPORTS" ("REPID") 
  ;
 
REM CODEGEN SECURITYLEVEL_PK

  CREATE UNIQUE INDEX "CODEGEN"."SECURITYLEVEL_PK" ON "CODEGEN"."SECURITYLEVEL" ("SECLEVELID") 
  ;
 
REM CODEGEN STATE_PK

  CREATE UNIQUE INDEX "CODEGEN"."STATE_PK" ON "CODEGEN"."STATE" ("STATEID") 
  ;
 
REM CODEGEN SUBCATEGORY_PK

  CREATE UNIQUE INDEX "CODEGEN"."SUBCATEGORY_PK" ON "CODEGEN"."SUBCATEGORY" ("SUBCATID") 
  ;
 
REM CODEGEN SUBSCRIPTIONBRAND_PK

  CREATE UNIQUE INDEX "CODEGEN"."SUBSCRIPTIONBRAND_PK" ON "CODEGEN"."SUBSCRIPTIONBRAND" ("BRANDID") 
  ;
 
REM CODEGEN TRAININGPLAN_PK

  CREATE UNIQUE INDEX "CODEGEN"."TRAININGPLAN_PK" ON "CODEGEN"."TRAININGPLAN" ("PLANID") 
  ;
 
REM CODEGEN usecasemaster_pk

  CREATE UNIQUE INDEX "CODEGEN"."usecasemaster_pk" ON "CODEGEN"."USECASEMASTER" ("USECASE_NAME", "PROJECT_ID") 
  ;
 